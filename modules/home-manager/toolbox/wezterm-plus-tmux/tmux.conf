# Copyright (c) Illia Danko 2022
#
# Tmux configuration file.


### Settings.

# Fix 256-color.
set -a terminal-overrides ",*256col*:RGB"
set-window-option -g xterm-keys on
set -g extended-keys always # allow to use non standard escape sequence, such as, C-, and C-.

# Undercurl.
set -g default-terminal "xterm-256color"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Start windows and panes at 1, not 0.
set -g base-index 1
set -g pane-base-index 0

# Misc.
set -g mouse on
set -g set-titles on # show proper titles
set -g history-limit 65535
set -g allow-rename off # disable rename title automatically
set -g focus-events on  # update editor's buffer
set -sg escape-time 10

# Refresh status line every 5 seconds - Good for when music is playing / update
# time etc.
set -g status-interval 5

# Allow applications to change fonts, etc.
set -g allow-passthrough on

### Theme.

set -g status "on"
set -g status-position top

set -g message-style bg='#000000',fg='#ffffff'
set -g mode-style 'reverse'
set -g status-style bg=default,fg=default
set -g pane-active-border-style bg=default,fg=colour7
set -g pane-border-style bg=default,fg=colour7
set -g window-status-style fg=1,bg=default
set -g window-status-current-style fg=1,bg=default

set -g status-left ""
set -g status-right "#[fg=2]#{?client_prefix,#[fg=4],}#{?pane_in_mode,#[fg=5],} #S "
set -g window-status-current-format "  "
set -g window-status-format "  "


### Keybindings.

# Change prefix-key (optional).
unbind C-Space
set -g prefix C-Space
bind C-Space send-prefix

bind -n M-h select-window -t:-1
bind -n M-l select-window -t:+1

# Move window to left and right position.
bind -n M-s swap-window -t:-1 \; select-window -t:-1
bind -n M-g swap-window -t:+1 \; select-window -t:+1
set-window-option -g mode-key vi
bind P paste-buffer

## Vim copy mode bindings.
set -s set-clipboard on
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
bind -T copy-mode-vi i send-keys -X copy-pipe-and-cancel
bind -T copy-mode-vi r send-keys -X rectangle-toggle

is_not_zoomed_window="echo '#{window_zoomed_flag}' | grep -qwE '0'"
is_other_panes='echo "#{window_panes}" | grep -vqwE "1"'
is_editor="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|nvim)(diff)?$|emacs.*$'"

# Bindings.
bind -n C-h if-shell "$is_editor" "send-keys C-h" "select-pane -L"
bind -n C-l if-shell "$is_editor" "send-keys C-l" "select-pane -R"
bind -n C-j if-shell "$is_editor" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_editor" "send-keys C-k" "select-pane -U"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U

# Tmux bindings (optional).
set-window-option -g mode-key vi
bind P paste-buffer
bind w kill-window \; movew -r
bind x kill-pane \; movew -r
bind o kill-pane -a # kill other panes
bind % if "$is_not_zoomed_window" "split-window -h -c \"#{pane_current_path}\"" "select-pane -t :.+"
bind \" if "$is_not_zoomed_window" "split-window -v -c \"#{pane_current_path}\"" "select-pane -t :.+"
bind c movew -r \; new-window -c "#{pane_current_path}"


### Plugins.

## --- tmux-logging - save tmux logs to harddrive.
# Save all pane output to logging file by [<prefix> + alt + shift + p].
# Clear history [<prefix> + alt + c].
# - (https://github.com/tmux-plugins/tmux-logging)
# - (https://www.youtube.com/watch?v=Lqehvpe_djs)
set -g @logging-path "$HOME/.tmux/logs"
set -g @screen-capture-path "$HOME/.tmux/logs"
set -g @save-complete-history-path "$HOME/.tmux/logs"
set -g @plugin 'tmux-plugins/tmux-logging'

# Init plugin manager.
# Option 1: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# run '~/.tmux/plugins/tpm/tpm'
#
# Option 2: install https://aur.archlinux.org/tmux-plugin-manager-git.git if in Archlinux.
# run '/usr/share/tmux-plugin-manager-git/tpm'

# Option 3: install `sudo apt install tmux-plugin-manager`
run '/usr/share/tmux-plugin-manager/tpm'
